---
import { Button } from "@workspace/ui/components/button";

// Get environment variables
const APP_URL = import.meta.env.PUBLIC_APP_URL || "https://localhost:3000";
---

<header
  class="sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
  <div class="@container w-full">
    <div class="flex h-14 items-center justify-between px-4 @sm:px-6 w-full">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-2">
        <span class="inline-flex size-6 items-center justify-center rounded-full bg-primary">
          <span class="sr-only">ShipFast</span>
        </span>
          <span class="font-semibold">ShipFast</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden @md:flex items-center space-x-6">
        <a
          href="#features"
          class="text-sm font-medium text-muted-foreground transition-colors hover:text-foreground"
        >
          Features
        </a>
        <a
          href="#pricing"
          class="text-sm font-medium text-muted-foreground transition-colors hover:text-foreground"
        >
          Pricing
        </a>
        <a
          href="#testimonials"
          class="text-sm font-medium text-muted-foreground transition-colors hover:text-foreground"
        >
          Testimonials
        </a>
        <a
          href="#faq"
          class="text-sm font-medium text-muted-foreground transition-colors hover:text-foreground"
        >
          FAQ
        </a>
      </nav>

      <!-- Auth Buttons -->
      <div class="flex items-center gap-2">
        <div id="auth-buttons" class="flex items-center gap-2">
          <!-- Default buttons (will be replaced by JavaScript) -->
          <Button variant="ghost" size="sm" className="hidden @sm:flex" asChild>
            <a href={`${APP_URL}/signin`}>
              Sign In
            </a>
          </Button>
          <Button size="sm" className="hidden @sm:inline-flex" asChild>
            <a href={`${APP_URL}/signin`}>
              Get Started
            </a>
          </Button>
        </div>

        <!-- Mobile Menu Button -->
        <Button
          variant="ghost"
          size="icon"
          className="@md:hidden"
          id="mobile-menu-button"
          aria-label="Toggle menu"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="size-4"
          >
            <line x1="4" y1="12" x2="20" y2="12" />
            <line x1="4" y1="6" x2="20" y2="6" />
            <line x1="4" y1="18" x2="20" y2="18" />
          </svg>
        </Button>
      </div>
    </div>

    <!-- Mobile Menu -->
    <div class="hidden border-t @md:hidden" id="mobile-menu">
      <div class="space-y-1 p-2">
        <a
          href="#features"
          class="block rounded-sm px-3 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground"
        >
          Features
        </a>
        <a
          href="#pricing"
          class="block rounded-sm px-3 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground"
        >
          Pricing
        </a>
        <a
          href="#testimonials"
          class="block rounded-sm px-3 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground"
        >
          Testimonials
        </a>
        <a
          href="#faq"
          class="block rounded-sm px-3 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground"
        >
          FAQ
        </a>
        <div class="border-t pt-2" id="mobile-auth-buttons">
          <a
            href={`${APP_URL}/signin`}
            class="block rounded-sm px-3 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground"
          >
            Sign In
          </a>
          <Button variant="outline" size="sm" className="mt-2 w-full justify-center" asChild>
            <a href={`${APP_URL}/signin`}>
              Get Started
            </a>
          </Button>
        </div>
      </div>
    </div>
</header>

<script>
  // Mobile menu toggle with improved accessibility
  const menuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");

  if (menuButton && mobileMenu) {
    const toggleMenu = () => {
      const isExpanded = menuButton.getAttribute("aria-expanded") === "true";
      menuButton.setAttribute("aria-expanded", String(!isExpanded));
      mobileMenu.classList.toggle("hidden");
    };

    menuButton.addEventListener("click", toggleMenu);

    // Close menu when clicking outside or pressing Escape
    document.addEventListener("click", (event) => {
      if (!menuButton.contains(event?.target) && !mobileMenu.contains(event?.target)) {
        menuButton.setAttribute("aria-expanded", "false");
        mobileMenu.classList.add("hidden");
      }
    });

    document.addEventListener("keydown", (event) => {
      if (event.key === "Escape") {
        menuButton.setAttribute("aria-expanded", "false");
        mobileMenu.classList.add("hidden");
      }
    });
  }

  // Authentication status check and button updates
  async function checkAuthStatus() {
    try {
      const APP_URL = "https://localhost:3000"; // Next.js app URL
      const response = await fetch(`${APP_URL}/api/auth/status`, {
        credentials: 'include', // Include cookies for session
        headers: {
          'Accept': 'application/json',
        }
      });

      if (response.ok) {
        const data = await response.json();
        updateAuthButtons(data.authenticated, APP_URL);
      } else {
        // If API call fails, keep default buttons
        console.warn('Failed to check auth status');
      }
    } catch (error) {
      // If API call fails, keep default buttons
      console.warn('Error checking auth status:', error);
    }
  }

  function updateAuthButtons(isAuthenticated: boolean, appUrl: string) {
    const desktopAuthButtons = document.getElementById('auth-buttons');
    const mobileAuthButtons = document.getElementById('mobile-auth-buttons');

    if (isAuthenticated) {
      // Show Dashboard button for authenticated users
      if (desktopAuthButtons) {
        desktopAuthButtons.innerHTML = `
          <button class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-9 px-4 py-2 hidden @sm:inline-flex" onclick="window.location.href='${appUrl}/dashboard'">
            Dashboard
          </button>
        `;
      }

      if (mobileAuthButtons) {
        mobileAuthButtons.innerHTML = `
          <button 
            onclick="window.location.href='${appUrl}/dashboard'"
            class="w-full mt-2 inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2"
          >
            Dashboard
          </button>
        `;
      }
    }
    // If not authenticated, keep the default buttons (already set in HTML)
  }

  // Check auth status when page loads
  document.addEventListener('DOMContentLoaded', checkAuthStatus);
</script>
